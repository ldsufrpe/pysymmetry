def representation(generators, matrices, field=QQbar):
    r"""
    Create a representation of an arbitrary group G.

    INPUT:

    - ``generators`` -- list; generators of the group G.

    - ``matrices`` -- list; generators images.

    - ``field`` -- Sage ring (default: `QQbar`); Defined representation space. Fast computations using the field `QQbar` or `AA`.

    OUTPUT: Mapping of the group generated by ``generators`` to the group of matrices generated by ``matrices``.


    EXAMPLES:

    This example illustrates ... ::

        sage: G = DihedralGroup(3) 
        sage: generators = G.gens()
        sage: matrices = [g.matrix() for g in generators]
        sage: rep = representation(gens, matrices)
        sage: rep
        Map: 
         From: Permutation Group with generators [(1,2,3), (1,3)] 
         To: Matrix group over Algebraic Field with 2 generators (
        [0 1 0]  [0 0 1]
        [0 0 1]  [0 1 0]
        [1 0 0], [1 0 0]
        ).

    Matrix associated to an element g of G. ::
        sage: sage: g = G.an_element()
        sage: rep(g).matrix()
        [0 1 0]
        [1 0 0]
        [0 0 1]        

    We now ... ::

        sage: generators = ["(1,2,3,4,5,6)","(1,4)(2,3)(5,6)"]
        sage: matrices = [matrix([[1/2,-sqrt(3)/2],[sqrt(3)/2,1/2]]),matrix([[-1,0],[0,1]])]
        sage: rep = representation(generators, matrices)
        sage: rep("(1,2,3,4,5,6)")
        [                1/2 -0.866025403784439?]
        [ 0.866025403784439?                 1/2]
        Representation space: Vector space of dimension 2 over Algebraic Field
        
        sage: rep("(1,4)(2,3)(5,6)")
        Linear transformation associated with element g=(1,4)(2,3)(5,6), represented by the non-singular matrix:
        [-1  0]
        [ 0  1]
        Representation space: Vector space of dimension 2 over Algebraic Field
    
    We now ... ::

        sage: rep = representation(generators, matrices, field=SR)
        sage: rep("(1,2,3,4,5,6)")
        Linear transformation associated with element g=(1,4)(2,3)(5,6), represented by the non-singular matrix:
        [-1  0]
        [ 0  1]
        Representation space: Vector space of dimension 2 over Symbolic Ring

    We now ... ::

        sage: G = Group(generators)
        sage: g = G.an_element()
        sage: rep(g)
        Linear transformation associated with element g=(1,3)(4,6), represented by the non-singular matrix:
        [               -1/2 -0.866025403784439?]
        [-0.866025403784439?                 1/2]
        Representation space: Vector space of dimension 2 over Algebraic Field

    We now ... ::

        sage: e = G.identity()
        sage: rep(e)
        Linear transformation associated with element g=(), represented by the non-singular matrix:
        [1 0 0]
        [0 1 0]
        [0 0 1]
        Representation space: Vector space of dimension 3 over Algebraic Field
        
        sage: [rep(g.inverse())==rep(g).inverse() for g in G]
        [True, True, True, True, True, True]

    
    .. NOTE::

        This function uses the algorithm of [BCDT2001]_ to ....
    

    It is an error to ... ::

        sage: rep((1,4)(2,3)(5,6))
        Traceback (most recent call last):
        ...
        TypeError: TypeError: 'tuple' object is not callable

        sage: rep((1,2,3,4,5,6))
        Traceback (most recent call last):
        ...
        TypeError: TypeError: 'tuple' object is not callable
        


        
    REFERENCES:

    For more information, see [Str1969]_, or one of the following references:

    - [Sto2000]_

    - [Voe2003]_     
    
    """
 <begin coding>